---
- name: Gather sonarr api key
  command: xq -r .Config.ApiKey /opt/sonarr/app/config.xml
  register: sonarr_api_key_cmd
- name: Gather sonarr port
  command: xq -r .Config.Port /opt/sonarr/app/config.xml
  register: sonarr_port_cmd

- set_fact: sonarr_api_key="{{ sonarr_api_key_cmd.stdout }}"
- set_fact: sonarr_port="{{ sonarr_port_cmd.stdout }}"

- name: Gather radarr api key
  command: xq -r .Config.ApiKey /opt/radarr/app/config.xml
  register: radarr_api_key_cmd
- name: Gather radarr port
  command: xq -r .Config.Port /opt/radarr/app/config.xml
  register: radarr_port_cmd

- set_fact: radarr_api_key="{{ radarr_api_key_cmd.stdout }}"
- set_fact: radarr_port="{{ radarr_port_cmd.stdout }}"


- debug:
    msg: "{{ sonarr_api_key }}"

- debug:
    msg: "{{ sonarr_port }}"

- debug:
    msg: "{{ radarr_api_key }}"
    
- debug:
    msg: "{{ radarr_port }}"

- name: "Setting CloudFlare DNS Record"
  include_role:
    name: cloudflare-dns
  vars:
    subdomain: "{{ common_subdomain }}"
  when: cloudflare_enabled

- name: Stop and remove any existing container
  docker_container: 
    name: '{{ item }}'
    state: absent
  with_items:
    - "{{ role_docker_container }}"

- name: Create required directories
  file: 
    path: "{{ item }}"
    state: directory 
    mode: '0775'
    owner: '{{ user.name }}'
    group: '{{ user.name }}'
  with_items: "{{ role_directories }}"

- debug:
    msg: "{{ role_directories }}"


- debug:
    msg: "{{ role_docker_container }}"
- debug:
    msg: "{{ role_custom_docker_env }}"

- name: Create and start container
  docker_container:
    name: "{{ role_docker_container }}"
    image: "{{ role_docker_image }}"
    pull: yes
    published_ports: "{{ role_published_ports }}"
    env: "{{ role_docker_default_env | combine(role_custom_docker_env) }}"
    volumes: "{{ role_docker_volumes }}"
    ports: "{{ role_docker_ports }}"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    user: "{{ uid }}:{{ gid }}"
    networks:
      - name: cloudbox
        aliases:
          - "{{ role_name }}"
    restart_policy: unless-stopped
    state: started
